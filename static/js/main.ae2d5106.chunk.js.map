{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/coronaImage.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","darkMode","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","options","legend","fontColor","scales","yAxes","ticks","xAxes","barChart","display","title","text","onClick","e","input","window","document","getElementsByClassName","img_base64","toDataURL","pdf","jsPDF","addImage","save","div2PDF","pdf_btn","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","target","i","App","state","setState","this","theme","createMuiTheme","palette","type","ThemeProvider","Paper","Switch","toggle","checked","src","coronaImage","alt","image","React","Component","ReactDOM","render","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,qOCgGpJC,EA3FD,SAAC,GAA4D,IAAD,IAAzDC,KAAQC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,WACtD,OAAKH,EAKJ,qBAAKI,UAAWC,IAAOC,UAAvB,SACC,eAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,SAApC,UACC,cAACF,EAAA,EAAD,CACCG,MAAI,EACJC,UAAWC,IACXC,GAAI,GACJC,GAAI,EACJV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,UALnC,SAMC,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,sBAGA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACC,cAAC,IAAD,CACCC,MAAO,EACPC,IAAKxB,EAAUyB,MACfC,SAAU,IACVC,UAAU,QAGZ,cAACR,EAAA,EAAD,CAAYC,MAAM,gBAAlB,SACE,IAAIQ,KAAKzB,GAAY0B,iBAEvB,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,qDAKF,cAACf,EAAA,EAAD,CACCG,MAAI,EACJC,UAAWC,IACXC,GAAI,GACJC,GAAI,EACJV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOJ,WALnC,SAMC,eAACiB,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,uBAGA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACC,cAAC,IAAD,CACCC,MAAO,EACPC,IAAKvB,EAAUwB,MACfC,SAAU,IACVC,UAAU,QAGZ,cAACR,EAAA,EAAD,CAAYC,MAAM,gBAAlB,SACE,IAAIQ,KAAKzB,GAAY0B,iBAEvB,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,qDAKF,cAACf,EAAA,EAAD,CACCG,MAAI,EACJC,UAAWC,IACXC,GAAI,GACJC,GAAI,EACJV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOH,QALnC,SAMC,eAACgB,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,oBAGA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACC,cAAC,IAAD,CACCC,MAAO,EACPC,IAAKtB,EAAOuB,MACZE,UAAU,IACVD,SAAU,QAGZ,cAACP,EAAA,EAAD,CAAYC,MAAM,gBAAlB,SACE,IAAIQ,KAAKzB,GAAY0B,iBAEvB,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,sDA/EG,e,yBCNHQ,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACpBC,EAAgBJ,EAEhBE,IACHE,EAAa,UAAMJ,EAAN,sBAAuBE,IAJb,kBAUbG,IAAMC,IAAIF,GAVG,2BAStBnC,KAAQC,EATc,EASdA,UAAWC,EATG,EASHA,UAAWC,EATR,EASQA,OAAQC,EAThB,EASgBA,WAThB,kBAYhB,CACNH,YACAC,YACAC,SACAC,eAhBsB,kCAmBvBkC,QAAQC,IAAR,MAnBuB,0DAAH,sDAuBTC,EAAc,uCAAG,gCAAAN,EAAA,+EAELE,IAAMC,IAAN,UAAaN,EAAb,WAFK,uBAEpB/B,EAFoB,EAEpBA,KAEFyC,EAAezC,EAAK0C,KAAI,SAACC,GAAD,MAAgB,CAC7C1C,UAAW0C,EAAU1C,UAAU2C,MAC/BzC,OAAQwC,EAAUxC,OAAOyC,MACzBC,KAAMF,EAAUG,eAPW,kBAUrBL,GAVqB,gCAY5BH,QAAQC,IAAR,MAZ4B,yDAAH,qDAgBdQ,EAAc,uCAAG,8BAAAb,EAAA,+EAIlBE,IAAMC,IAAN,UAAaN,EAAb,eAJkB,uBAGnBiB,EAHmB,EAG3BhD,KAAQgD,UAHmB,kBAMrBA,EAAUN,KAAI,SAACT,GAAD,OAAaA,EAAQgB,SANd,gCAQ5BX,QAAQC,IAAR,MAR4B,yDAAH,qD,yCCqGZW,EApID,SAAC,GAIR,IAAD,IAHLlD,KAAQC,EAGH,EAHGA,UAAWC,EAGd,EAHcA,UAAWC,EAGzB,EAHyBA,OAC9B8B,EAEK,EAFLA,QACAkB,EACK,EADLA,SACK,EAC6BC,mBAAS,IADtC,mBACET,EADF,KACaU,EADb,KAGLC,qBAAU,YACK,uCAAG,sBAAApB,EAAA,kEAChBmB,EADgB,SACGb,IADH,6EAAH,qDAIde,KACE,IAEH,IAiBMC,EAAYb,EAAUc,OAC3B,cAAC,OAAD,CACCzD,KAAM,CACL0D,OAAQf,EAAUD,KAAI,qBAAGG,QACzBc,SAAU,CACT,CACC3D,KAAM2C,EAAUD,KAAI,qBAAGzC,aACvB2D,MAAO,WACPC,YAAa,UACbC,MAAM,EACNC,gBAAiB,qBAElB,CACC/D,KAAM2C,EAAUD,KAAI,qBAAGvC,UACvByD,MAAO,SACPC,YAAa,MACbC,MAAM,EACNC,gBAAiB,uBAIpBC,QAAS,CACRC,OAAQ,CACPP,OAAQ,CACPQ,UAAWf,EAAW,QAAU,UAGlCgB,OAAQ,CACPC,MAAO,CACN,CACCC,MAAO,CACNH,UAAWf,EAAW,OAAS,UAIlCmB,MAAO,CACN,CACCD,MAAO,CACNH,UAAWf,EAAW,OAAS,cAOlC,KAEEoB,EAAWtE,EAChB,cAAC,MAAD,CACCD,KAAM,CACL0D,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CACT,CACCC,MAAO,SACPG,gBAAiB,CAChB,oBACA,oBACA,qBAED/D,KAAM,CAACC,EAAUyB,MAAOxB,EAAUwB,MAAOvB,EAAOuB,UAInDsC,QAAS,CACRC,OAAQ,CAAEO,SAAS,GACnBC,MAAO,CACND,SAAS,EACTE,KAAK,oBAAD,OAAsBzC,GAC1BiC,UAAWf,EAAW,OAAS,QAEhCgB,OAAQ,CACPC,MAAO,CACN,CACCC,MAAO,CACNH,UAAWf,EAAW,OAAS,UAIlCmB,MAAO,CACN,CACCD,MAAO,CACNH,UAAWf,EAAW,OAAS,cAOlC,KAEJ,OACC,sBAAK9C,UAAS,UAAKC,IAAOC,UAAZ,YAAd,UACE0B,EAAUsC,EAAWf,EACtB,wBAAQmB,QAAS,SAACC,GAAD,OA9GH,SAACA,GAEhB,IAAIC,EAAQC,OAAOC,SAASC,uBAC3B,0BACC,GAEF1C,QAAQC,IAAIsC,GAEZ,IAAII,EAAaJ,EAAMK,UAAU,aAEjC5C,QAAQC,IAAI0C,GAEZ,IAAME,EAAM,IAAIC,IAChBD,EAAIE,SAASJ,EAAY,OAAQ,EAAG,EAAG,IAAK,KAC5CE,EAAIG,KAAK,aAgGgBC,IAAYlF,UAAWC,IAAOkF,QAAtD,gC,mCCpGYC,EA7BO,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACFtC,mBAAS,IADP,mBAC3CuC,EAD2C,KACzBC,EADyB,KAWlD,OARAtC,qBAAU,YACK,uCAAG,sBAAApB,EAAA,kEAChB0D,EADgB,SACU7C,IADV,6EAAH,qDAIdQ,KACE,CAACqC,IAGH,cAACC,EAAA,EAAD,CAAaxF,UAAWC,IAAOuF,YAA/B,SACC,eAACC,EAAA,EAAD,CACCC,aAAa,GACbC,SAAU,SAACpB,GACVc,EAAoBd,EAAEqB,OAAOvE,QAH/B,UAKC,wBAAQA,MAAM,GAAd,oBACCiE,EAAiBjD,KAAI,SAACT,EAASiE,GAAV,OACrB,wBAAgBxE,MAAOO,EAAvB,SACEA,GADWiE,Y,iBC5BH,MAA0B,wC,mCCiE1BC,E,4MAvDdC,MAAQ,CACPpG,KAAM,GACNiC,QAAS,GACTkB,UAAU,G,EASXuC,oB,uCAAsB,WAAOzD,GAAP,eAAAC,EAAA,sEACFF,EAAUC,GADR,OACfjC,EADe,OAGrB,EAAKqG,SAAS,CAAErG,OAAMiC,YAHD,2C,oJANtB,4BAAAC,EAAA,sEACoBF,IADpB,OACOhC,EADP,OAGCsG,KAAKD,SAAS,CAAErG,SAHjB,gD,0EAYA,WAAU,IAAD,SAC4BsG,KAAKF,MAAjCpG,EADA,EACAA,KAAMiC,EADN,EACMA,QAASkB,EADf,EACeA,SAEjBoD,EAAQC,YAAe,CAC5BC,QAAS,CACRC,KAAMvD,EAAW,OAAS,WAI5B,OACC,cAACwD,EAAA,EAAD,CAAeJ,MAAOA,EAAtB,SACC,cAACK,EAAA,EAAD,UACC,sBAAKvG,UAAWC,IAAOC,UAAvB,UACC,cAACsG,EAAA,EAAD,CACCxF,MAAM,UACNhB,UAAWC,IAAOwG,OAClBC,QAAS5D,EACT6C,SAAU,WACT,EAAKK,SAAS,CAAElD,UAAWA,OAI7B,qBACC6D,IAAKC,EACLC,IAAI,oBACJ7G,UAAWC,IAAO6G,QAEnB,cAAC,EAAD,CAAOnH,KAAMA,IACb,cAAC,EAAD,CAAe0F,oBAAqBY,KAAKZ,sBACzC,cAAC,EAAD,CAAO1F,KAAMA,EAAMiC,QAASA,EAASkB,SAAUA,e,GAhDnCiE,IAAMC,WCJxBC,IAASC,OAAO,cAAC,EAAD,IAASxC,SAASyC,eAAe,U,mBCJjD3H,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,mBAAmB,OAAS,sB,mBCAzFD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,QAAU,yB,mBCAjED,EAAOC,QAAU,CAAC,YAAc,sC","file":"static/js/main.ae2d5106.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1VoBf\",\"card\":\"Cards_card__3WS26\",\"infected\":\"Cards_infected__1bHhQ\",\"recovered\":\"Cards_recovered__1GkMi\",\"deaths\":\"Cards_deaths__3GIsz\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\tif (!confirmed) {\r\n\t\treturn 'Loading....';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<Grid container spacing={3} justify='center'>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\tcomponent={Card}\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tmd={3}\r\n\t\t\t\t\tclassName={cx(styles.card, styles.infected)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color='textSecondary' gutterBottom>\r\n\t\t\t\t\t\t\tInfected\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='h5'>\r\n\t\t\t\t\t\t\t<CountUp\r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={confirmed.value}\r\n\t\t\t\t\t\t\t\tduration={1.5}\r\n\t\t\t\t\t\t\t\tseparator=','\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color='textSecondary'>\r\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='body2'>\r\n\t\t\t\t\t\t\tNumber of active cases of Covid-19\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\tcomponent={Card}\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tmd={3}\r\n\t\t\t\t\tclassName={cx(styles.card, styles.recovered)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color='textSecondary' gutterBottom>\r\n\t\t\t\t\t\t\tRecovered\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='h5'>\r\n\t\t\t\t\t\t\t<CountUp\r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={recovered.value}\r\n\t\t\t\t\t\t\t\tduration={1.5}\r\n\t\t\t\t\t\t\t\tseparator=','\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color='textSecondary'>\r\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='body2'>\r\n\t\t\t\t\t\t\tNumber of recoveries from Covid-19\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\tcomponent={Card}\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tmd={3}\r\n\t\t\t\t\tclassName={cx(styles.card, styles.deaths)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color='textSecondary' gutterBottom>\r\n\t\t\t\t\t\t\tDeaths\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='h5'>\r\n\t\t\t\t\t\t\t<CountUp\r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={deaths.value}\r\n\t\t\t\t\t\t\t\tseparator=','\r\n\t\t\t\t\t\t\t\tduration={1.5}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color='textSecondary'>\r\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='body2'>\r\n\t\t\t\t\t\t\tNumber of deaths from Covid-19\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\tlet changeableUrl = url;\r\n\r\n\tif (country) {\r\n\t\tchangeableUrl = `${url}/countries/${country}`;\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: { confirmed, recovered, deaths, lastUpdate },\r\n\t\t} = await axios.get(changeableUrl);\r\n\r\n\t\treturn {\r\n\t\t\tconfirmed,\r\n\t\t\trecovered,\r\n\t\t\tdeaths,\r\n\t\t\tlastUpdate,\r\n\t\t};\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${url}/daily`);\r\n\r\n\t\tconst modifiedData = data.map((dailyData) => ({\r\n\t\t\tconfirmed: dailyData.confirmed.total,\r\n\t\t\tdeaths: dailyData.deaths.total,\r\n\t\t\tdate: dailyData.reportDate,\r\n\t\t}));\r\n\r\n\t\treturn modifiedData;\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: { countries },\r\n\t\t} = await axios.get(`${url}/countries`);\r\n\r\n\t\treturn countries.map((country) => country.name);\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nimport html2canvas from 'html2canvas';\r\n\r\nimport { jsPDF } from 'jspdf';\r\n\r\nconst Chart = ({\r\n\tdata: { confirmed, recovered, deaths },\r\n\tcountry,\r\n\tdarkMode,\r\n}) => {\r\n\tconst [dailyData, setDailyData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetDailyData(await fetchDailyData());\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t}, []);\r\n\r\n\tconst div2PDF = (e) => {\r\n\r\n\t\tlet input = window.document.getElementsByClassName(\r\n\t\t\t'chartjs-render-monitor',\r\n\t\t)[0];\r\n\r\n\t\tconsole.log(input);\r\n\r\n\t\tvar img_base64 = input.toDataURL('image/png');\r\n\r\n\t\tconsole.log(img_base64);\r\n\r\n\t\tconst pdf = new jsPDF();\r\n\t\tpdf.addImage(img_base64, 'JPEG', 0, 0, 200, 200);\r\n\t\tpdf.save('chart.pdf');\r\n\t};\r\n\r\n\tconst lineChart = dailyData.length ? (\r\n\t\t<Line\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: dailyData.map(({ date }) => date),\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\r\n\t\t\t\t\t\tlabel: 'Infected',\r\n\t\t\t\t\t\tborderColor: '#3333ff',\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(0,0,255,0.5)',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\r\n\t\t\t\t\t\tlabel: 'Deaths',\r\n\t\t\t\t\t\tborderColor: 'red',\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(255,0,0,0.5)',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t\toptions={{\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\tfontColor: darkMode ? 'white' : 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tscales: {\r\n\t\t\t\t\tyAxes: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\t\tfontColor: darkMode ? '#fff' : '#333',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\txAxes: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\t\tfontColor: darkMode ? '#fff' : '#333',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\tconst barChart = confirmed ? (\r\n\t\t<Bar\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: ['Infected', 'Recovered', 'Deaths'],\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'People',\r\n\t\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t\t'rgba(0,0,255,0.5)',\r\n\t\t\t\t\t\t\t'rgba(0,255,0,0.5)',\r\n\t\t\t\t\t\t\t'rgba(255,0,0,0.5)',\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata: [confirmed.value, recovered.value, deaths.value],\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t\toptions={{\r\n\t\t\t\tlegend: { display: false },\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\ttext: `Current State in ${country}`,\r\n\t\t\t\t\tfontColor: darkMode ? '#fff' : '#333',\r\n\t\t\t\t},\r\n\t\t\t\tscales: {\r\n\t\t\t\t\tyAxes: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\t\tfontColor: darkMode ? '#fff' : '#333',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\txAxes: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\t\tfontColor: darkMode ? '#fff' : '#333',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\treturn (\r\n\t\t<div className={`${styles.container} div2PDF`}>\r\n\t\t\t{country ? barChart : lineChart}\r\n\t\t\t<button onClick={(e) => div2PDF(e)} className={styles.pdf_btn}>\r\n\t\t\t\tConvert to PDF\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\tconst [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetFetchedCountries(await fetchCountries());\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t}, [setFetchedCountries]);\r\n\r\n\treturn (\r\n\t\t<FormControl className={styles.FormControl}>\r\n\t\t\t<NativeSelect\r\n\t\t\t\tdefaultValue=''\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\thandleCountryChange(e.target.value);\r\n\t\t\t\t}}>\r\n\t\t\t\t<option value=''>Global</option>\r\n\t\t\t\t{fetchedCountries.map((country, i) => (\r\n\t\t\t\t\t<option key={i} value={country}>\r\n\t\t\t\t\t\t{country}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t))}\r\n\t\t\t</NativeSelect>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport default CountryPicker;\r\n","export default __webpack_public_path__ + \"static/media/coronaImage.9e5d4fc7.png\";","import React from 'react';\r\n\r\nimport { Cards, CountryPicker, Chart } from './components';\r\nimport { fetchData } from './api/';\r\nimport styles from './App.module.css';\r\nimport coronaImage from './images/coronaImage.png';\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport { Paper, Switch } from '@material-ui/core';\r\n\r\nclass App extends React.Component {\r\n\tstate = {\r\n\t\tdata: {},\r\n\t\tcountry: '',\r\n\t\tdarkMode: false,\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst data = await fetchData();\r\n\r\n\t\tthis.setState({ data });\r\n\t}\r\n\r\n\thandleCountryChange = async (country) => {\r\n\t\tconst data = await fetchData(country);\r\n\r\n\t\tthis.setState({ data, country });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { data, country, darkMode } = this.state;\r\n\r\n\t\tconst theme = createMuiTheme({\r\n\t\t\tpalette: {\r\n\t\t\t\ttype: darkMode ? 'dark' : 'light',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t<Paper>\r\n\t\t\t\t\t<div className={styles.container}>\r\n\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\tclassName={styles.toggle}\r\n\t\t\t\t\t\t\tchecked={darkMode}\r\n\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\tthis.setState({ darkMode: !darkMode });\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={coronaImage}\r\n\t\t\t\t\t\t\talt='COVID description'\r\n\t\t\t\t\t\t\tclassName={styles.image}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Cards data={data} />\r\n\t\t\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange} />\r\n\t\t\t\t\t\t<Chart data={data} country={country} darkMode={darkMode} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Paper>\r\n\t\t\t</ThemeProvider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2yxlh\",\"image\":\"App_image__2ceRw\",\"toggle\":\"App_toggle__3C0aD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2TH6g\",\"pdf_btn\":\"Chart_pdf_btn__mGmGS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3rWJh\"};"],"sourceRoot":""}